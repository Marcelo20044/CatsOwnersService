version: '3.8'
services:
  authentication-service:
    image: authentication:0.0.1
    build:
      context: authentication
      dockerfile: Dockerfile
    ports:
      - "8192:8192"
    depends_on:
      - service-db
      - kafka
    environment:
      - SERVER_PORT=8192
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres

  cat-service:
    image: cat:0.0.1
    build:
      context: cat
      dockerfile: Dockerfile
    ports:
      - "8190:8190"
    depends_on:
      - service-db
      - kafka
    environment:
      - SERVER_PORT=8190
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres

  owner-service:
    image: owner:0.0.1
    build:
      context: owner
      dockerfile: Dockerfile
    ports:
      - "8191:8191"
    depends_on:
      - service-db
      - kafka
    environment:
      - SERVER_PORT=8191
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres

  presentation-service:
    image: presentation:0.0.1
    build:
      context: presentation
      dockerfile: Dockerfile
    ports:
      - "8189:8189"
    depends_on:
      - service-db
      - kafka
    environment:
      - SERVER_PORT=8189
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres

  service-db:
    image: postgres:14.7-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD:
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped


  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgres_data: